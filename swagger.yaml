swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
       # - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  #Récupérer les transactions
  /user/accounts/{accountId}/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
    summary: Get account transactions
    description: API for retrieving all transactions of a specific account for the current month
    parameters:
      - in: path
        name: accountId
        description: Account id
        required: true
        type: string
      - in: query
        name: month
        description: Month(1-12)
        required: false
        type: integer
      - in: query
        name: year
        description: Year (e.g. 2025)
        required: false
        type: integer
    produces:
    - application/json
    responses:
      '200':
        description: Transactions retrieved Successfully
        schema:
          $ref: '#/definitions/TransactionsResponse'
      '400':
        description: invalid account ID or parameters
      '401':
        description: Unauthorized - Invalid or missing token
      '404':
        description: Account not found
      '500':
        description: Internal Server Error

  # Détails d'une transaction
  /user/transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Get transaction details
      description: API for retrieving details of a specific transaction
      parameters:
        - in: path
          name: transactionId
          description: Transaction ID
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Transaction details retrieved successfully
          schema:
            $ref: '#/definitions/TransactionDetailsResponse'
        '400':
          description: Invalid transaction ID
        '401':
          description: Unauthorized - Invalid or missing token
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error
    # Mettre à jour les informations de transaction 
    patch:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Update transaction information
      description: API for updating transaction category and/or notes
      parameters:
        - in: path
          name: transactionId
          description: Transaction ID
          required: true
          type: string
        - in: body
          name: body
          description: Transaction update payload
          required: true
          schema:
            $ref: '#/definitions/UpdateTransactionRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction updated successfully
          schema:
            $ref: '#/definitions/TransactionDetailsResponse'
        '400':
          description: Invalid fields or transaction ID
        '401':
          description: Unauthorized - Invalid or missing token
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error
    # Réinitialiser les infos de transaction
    delete:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Delete transaction metadata
      description: API for deleting user-added information (category and notes) from a transaction
      parameters:
        - in: path
          name: transactionId
          description: Transaction ID
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Transaction metadata deleted successfully
          schema:
            $ref: '#/definitions/TransactionDetailsResponse'
        '400':
          description: Invalid transaction ID
        '401':
          description: Unauthorized - Invalid or missing token
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error


securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  Transaction:
    type: object
    properties:
      id:
        type: string
        description: Transaction ID
      date: 
        type: string
        description: Transaction date (YYYY-MM-DD)
      description:
        type: string
        description: Transaction description
      amount: 
        type: number
        description: Transaction amount (negative for debit, positive for credit)
      balance: 
        type: number
        description: Account balance after transaction
      type: 
        type: string
        description: Transaction type (Electronic, Check, etc.)
      category:
        type: string
        description: Transaction category (editable by user)
      notes: 
        type: string
        description: Transaction notes (editable by user)
  TransactionsResponse:
    type: object
    properties:
      status:
        type: integer
        description: HTTP status code
      message: 
        type: string
        description: Response message
      body: 
        type: array
        items:
          $ref: '#/definitions/Transaction'
        description: Array of transactions
  TransactionDetailsResponse:
    type: object
    properties:
      status:
        type: integer
        description: HTTP status code
      message:
        type: string
        description: Response message
      body:
        $ref: '#/definitions/Transaction'
        description: Transaction details
  UpdateTransactionRequest:
  type: object
  properties:
    category:
      type: string
      description: Transaction category
    notes:
      type: string
      description: Transaction notes
      

